name: Containerize and push to Registry

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # robot$suitecrm7+github_deployer

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set branch env
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Set build version
        run: |
          VER=$(sed -n -e '/^$suitecrm_version/p' ./suitecrm_version.php | cut -d "'" -f 2)
          BUILD=$GITHUB_RUN_NUMBER
          echo "BUILD_VERSION=$VER-container-$BUILD" >> $GITHUB_ENV

      - name: Docker Build & Push Action
        # You may pin to the exact commit or the version.
        # uses: mr-smithers-excellent/docker-build-push@a7fe6652db5c7274374844e81692992f5a2befb9
        uses: mr-smithers-excellent/docker-build-push@v5.6
        with:
          # Name of the Docker image
          image: suitecrm7/${{ env.BRANCH }}
          # Tags override for Docker image
          tags: ${{ env.BRANCH }}, ${{ env.BUILD_VERSION }} # optional
          # Target Docker registry
          registry: ${{ secrets.REGISTRY_URL }}
          # Location of Dockerfile, if not Dockerfile in root directory
          dockerfile: Dockerfile # optional, default is Dockerfile
          # Docker build arguments passed via --build-arg
          #buildArgs: # optional
          # Docker build labels passed via --label
          #labels: # optional
          # Docker build target passed via --target
          #target: # optional
          # Docker registry username
          username: ${{ secrets.REGISTRY_USER }}
          # Docker registry password
          password: ${{ secrets.REGISTRY_PASSWORD }} # optional
          # Adds latest tag to auto-generated GitOps tag
          addLatest: true # optional, default is false
          
#      - name: Checkout Chart
#        uses: actions/checkout@master
#        with: 
#          repository: TLii/lwcrm-chart
#          token: ${{ secrets.LWCRM_PAT }}
#          path: ./chart
#
#      - name: Update Chart Versions
#        run: |
#          CHARTVER=$(sed -n  '/^version:.*/p' ./chart/$BRANCH/Chart.yaml | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
#          sed -i "s/^version:.*/$CHARTVER/" ./chart/$BRANCH/Chart.yaml
#          sed -i "s/^appVersion:.*/appVersion: $BUILD_VERSION/" ./chart/$BRANCH/Chart.yaml
#          echo "Chart version: $CHARTVER\nApp Version: $BUILD_VERSION"
#
#      - name: Push Chart
#        run: |
#          cd ./chart
#          git add .
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git commit -am "Pipeline/Updated Chart version and App version"
#          git push
